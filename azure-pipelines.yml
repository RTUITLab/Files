trigger:
  branches:
    include:
      - "*"
  tags:
    include:
      - "*"

pool:
  vmImage: 'ubuntu-latest'

name: $(BuildID)-$(Build.SourceBranchName)

resources:
  - repo: self

variables:
  ${{ if notIn(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    dockerCommand: 'build'
    deployService: false
    deployEnvironment: 'no'
    imageTags: 'no'
    serviceName: 'no'
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    dockerCommand: 'buildAndPush'
    deployService: true
    deployEnvironment: production
    imageTags: |
      $(Build.BuildId)
      latest
    serviceName: files_server

stages:
  - stage: packDockerImages
    displayName: Build/Push docker images
    jobs:
      - job: packPublicImage
        displayName: Build public docker image
        steps:
          - checkout: self
            lfs: true
          - task: Docker@2
            displayName: Build image for docker hub
            inputs:
              containerRegistry: 'rtuitlab connection by admin'
              repository: 'rtuitlab/files'
              Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
              buildContext: '$(Build.SourcesDirectory)'
              command: '${{ variables.dockerCommand }}'
              tags: '${{ variables.imageTags }}'
  - stage: UpdateService
    displayName: Deploy service
    condition: and(succeeded(), ${{ variables.deployService }})
    jobs:
      - deployment: Deploy
        environment: ${{variables.deployEnvironment}}
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - task: SSH@0
                  inputs:
                    sshEndpoint: 'swarm manager'
                    runOptions: 'commands'
                    commands: 'docker service update --image rtuitlab/files:$(Build.BuildId) ${{ variables.serviceName }}'
                    readyTimeout: '20000'
